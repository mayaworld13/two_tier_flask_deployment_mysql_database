name: CI-CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run Unit Tests with Coverage (ignore if no tests)
        run: |
          pytest --maxfail=1 --disable-warnings --cov=. --cov-report=xml || echo "No tests found, skipping..."

      # üîç SonarQube Analysis (includes coverage if available)
      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} # e.g. https://sonarcloud.io

      # üîê Snyk Scan for dependencies
      - name: Snyk Open Source Scan
        uses: snyk/actions/python@master
        with:
          command: test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # üîê Snyk Docker Image Scan (your prebuilt image)
      - name: Snyk Docker Scan
        uses: snyk/actions/docker@master
        with:
          image: ${{ secrets.DOCKER_IMAGE }}
          command: test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

